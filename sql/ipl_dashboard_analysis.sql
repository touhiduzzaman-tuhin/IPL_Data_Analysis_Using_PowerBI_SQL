-- find the title winner in each season
SELECT SEASON, WINNING_TEAM
FROM IPL_MATCHES_2008_2022
WHERE MATCH_NUMBER = 'Final';

-- find the title winner in 2020/21 season
SELECT SEASON, WINNING_TEAM
FROM IPL_MATCHES_2008_2022
WHERE MATCH_NUMBER = 'Final' AND SEASON = '2020/21';

-- find the orange cap holder in 2016 season
SELECT SEASON, BATTER, SUM(BATSMAN_RUN) AS TOTAL_RUNS
FROM IPL_MATCHES_2008_2022 AS M
JOIN IPL_BALL_BY_BALL_2008_2022 AS B ON M.ID = B.ID
WHERE SEASON = '2016'
GROUP BY SEASON, BATTER
ORDER BY TOTAL_RUNS DESC
LIMIT 1;


-- find the purple cap holder in 2016 season
SELECT SEASON, BOWLER, SUM(ISWICKET_DELIVERY) AS TOTAL_WICKETS
FROM IPL_MATCHES_2008_2022 AS M
JOIN IPL_BALL_BY_BALL_2008_2022 AS B ON B.ID = M.ID
WHERE SEASON = '2016' AND (DISMISAL_KIND IN ('bowled', 'caught', 'caught and bowled', 'hit wicket', 'lbw', 'stumped'))
GROUP BY SEASON, BOWLER
ORDER BY TOTAL_WICKETS DESC
LIMIT 1

-- find the total tournament sixes in 2016 season
SELECT SEASON, COUNT(BATSMAN_RUN) AS TOTAL_SIXES
FROM IPL_MATCHES_2008_2022 AS M
JOIN IPL_BALL_BY_BALL_2008_2022 AS B ON B.ID = M.ID
WHERE SEASON = '2016' AND BATSMAN_RUN = 6 AND NON_BOUNDRY = 0
GROUP BY SEASON;

-- find the total tournament fours in 2022 season
SELECT SEASON, COUNT(BATSMAN_RUN) AS TOTAL_FOURS
FROM IPL_MATCHES_2008_2022 AS M
JOIN IPL_BALL_BY_BALL_2008_2022 AS B ON B.ID = M.ID
WHERE SEASON = '2022' AND BATSMAN_RUN = 4 AND NON_BOUNDRY = 0
GROUP BY SEASON

-- Batting stats
-- find the total runs, total sixes, total fours and strike rate for AB in 2016

SELECT SEASON, B.BATTER, SUM(BATSMAN_RUN) AS TOTAL_RUNS, X.TOTAL_SIXES, Y.TOTAL_FOURS, Z.STRIKE_RATE
FROM IPL_MATCHES_2008_2022 AS M
JOIN IPL_BALL_BY_BALL_2008_2022 AS B ON B.ID = M.ID
JOIN (SELECT BATTER, COUNT(BATSMAN_RUN) TOTAL_SIXES
	   FROM IPL_BALL_BY_BALL_2008_2022 AS B
	   JOIN IPL_MATCHES_2008_2022 AS M ON M.ID = B.ID
	   WHERE SEASON = '2016' AND BATSMAN_RUN = 6 AND NON_BOUNDRY = 0
	   GROUP BY BATTER) AS X ON X.BATTER = B.BATTER
JOIN (SELECT BATTER, COUNT(BATSMAN_RUN) TOTAL_FOURS
	   FROM IPL_BALL_BY_BALL_2008_2022 AS B
	   JOIN IPL_MATCHES_2008_2022 AS M ON M.ID = B.ID
	   WHERE SEASON = '2016' AND BATSMAN_RUN = 4 AND NON_BOUNDRY = 0
	   GROUP BY BATTER) AS Y ON Y.BATTER = B.BATTER
JOIN (SELECT BATTER, ((SUM(BATSMAN_RUN)/COUNT(BALL_NUMBER))*100)::NUMERIC(10, 2) STRIKE_RATE
	   FROM IPL_BALL_BY_BALL_2008_2022 AS B
	   JOIN IPL_MATCHES_2008_2022 AS M ON M.ID = B.ID
	   WHERE SEASON = '2016'
	   GROUP BY BATTER) AS Z ON Z.BATTER = B.BATTER
WHERE SEASON = '2016' AND B.BATTER LIKE '%AB%'
GROUP BY B.BATTER, SEASON, X.TOTAL_SIXES, Y.TOTAL_FOURS, Z.STRIKE_RATE
ORDER BY TOTAL_RUNS DESC
LIMIT 1

-- Bowling Stats
-- find total wickets, economy rate, average, strike rate for YS Chahal in 2016
SELECT * FROM IPL_BALL_BY_BALL_2008_2022;
SELECT DISTINCT EXTRA_TYPE FROM IPL_BALL_BY_BALL_2008_2022;

SELECT M.SEASON, B.BOWLER, SUM(ISWICKET_DELIVERY) AS TOTAL_WICKETS, Y.ECONOMY_RATE, Z.AVERAGE, A.BOWLING_SR
FROM IPL_BALL_BY_BALL_2008_2022 AS B
JOIN IPL_MATCHES_2008_2022 AS M ON M.ID = B.ID
JOIN (SELECT BOWLER, SUM(ISWICKET_DELIVERY) AS TOTAL_WICKETS
	  FROM IPL_BALL_BY_BALL_2008_2022 AS B
	  JOIN IPL_MATCHES_2008_2022 AS M ON B.ID = M.ID
	  WHERE SEASON = '2016' AND DISMISAL_KIND IN ('bowled', 'caught', 'caught and bowled', 'hit wicket', 'lbw', 'stumped')
	  GROUP BY BOWLER
	  ORDER BY TOTAL_WICKETS DESC) AS X ON X.BOWLER = B.BOWLER
JOIN (SELECT BOWLER, ROUND(SUM(TOTAL_RUN)/(COUNT(OVERS)/6), 2) AS ECONOMY_RATE
	  FROM IPL_BALL_BY_BALL_2008_2022 AS B
	  JOIN IPL_MATCHES_2008_2022 AS M ON M.ID = B.ID
	  WHERE SEASON = '2016'
	  GROUP BY BOWLER) AS Y ON Y.BOWLER = B.BOWLER
JOIN (SELECT BOWLER, ROUND(SUM(TOTAL_RUN)/SUM(ISWICKET_DELIVERY), 2) AS AVERAGE
	  FROM IPL_BALL_BY_BALL_2008_2022 AS B
	  JOIN IPL_MATCHES_2008_2022 AS M ON M.ID = B.ID
	  WHERE SEASON = '2016'
	  GROUP BY BOWLER
	  HAVING SUM(ISWICKET_DELIVERY) > 0) AS Z ON Z.BOWLER = B.BOWLER
JOIN (SELECT BOWLER, ROUND(COUNT(BOWLER)/SUM(ISWICKET_DELIVERY), 2) AS BOWLING_SR
	  FROM IPL_BALL_BY_BALL_2008_2022 AS B
	  JOIN IPL_MATCHES_2008_2022 AS M ON M.ID = B.ID
	  WHERE SEASON = '2016'
	  GROUP BY BOWLER
	  HAVING SUM(ISWICKET_DELIVERY) > 0) AS A ON A.BOWLER = B.BOWLER
WHERE SEASON = '2016'AND DISMISAL_KIND IN ('bowled', 'caught', 'caught and bowled', 'hit wicket', 'lbw', 'stumped')
GROUP BY M.SEASON, B.BOWLER, A.BOWLING_SR, Y.ECONOMY_RATE, Z.AVERAGE
ORDER BY TOTAL_WICKETS DESC
LIMIT 1;


-- find win the match based on toss in 2016
SELECT TOSS_DECISION, COUNT(*) AS TOTAL_WINS, 
ROUND((CAST(COUNT(*) AS NUMERIC)/(SELECT COUNT(*)
							FROM IPL_MATCHES_2008_2022
							WHERE SEASON = '2016' AND WINNING_TEAM = TOSS_WINNER))*100, 2) || ' %' AS WINNIG_PCT
FROM IPL_MATCHES_2008_2022
WHERE SEASON = '2016' AND WINNING_TEAM = TOSS_WINNER
GROUP BY TOSS_DECISION

-- find total match win By a venue in 2016 season
SELECT * FROM IPL_MATCHES_2008_2022;
SELECT M.VENUE, COUNT(*) AS TOTAL_WINS, X.WIN_BY_RUNS, Y.WIN_BY_WICKETS
FROM IPL_MATCHES_2008_2022 AS M
LEFT JOIN (SELECT VENUE, COUNT(*) AS WIN_BY_RUNS
	  FROM IPL_MATCHES_2008_2022
	  WHERE SEASON = '2016' AND WON_BY = 'Runs'
	  GROUP BY VENUE) AS X ON X.VENUE = M.VENUE
LEFT JOIN (SELECT VENUE, COUNT(*) AS WIN_BY_WICKETS
		   FROM IPL_MATCHES_2008_2022
		   WHERE SEASON = '2016' AND WON_BY = 'Wickets'
		   GROUP BY VENUE) AS Y ON Y.VENUE = M.VENUE
WHERE SEASON = '2016'
GROUP BY M.VENUE, X.WIN_BY_RUNS, Y.WIN_BY_WICKETS
ORDER BY TOTAL_WINS DESC, VENUE


-- find total match win a team in 2016 season
SELECT WINNING_TEAM, COUNT(*) TOTAL_WINS
FROM IPL_MATCHES_2008_2022
WHERE SEASON = '2016'
GROUP BY WINNING_TEAM
ORDER BY TOTAL_WINS DESC;

-- find match win based on result type in 2026
SELECT WON_BY, COUNT(*) AS TOTAL_MATCH_WIN, ROUND((CAST(COUNT(*) AS NUMERIC)/(SELECT COUNT(*)
													  FROM IPL_MATCHES_2008_2022
													  WHERE SEASON = '2016'))*100, 2) || ' %' AS PCT
FROM IPL_MATCHES_2008_2022
WHERE SEASON = '2016'
GROUP BY WON_BY